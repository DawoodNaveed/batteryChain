{% extends 'layout.html.twig' %}

{% block sonata_breadcrumb %}
    <div class="hidden-xs">
        <ol class="nav navbar-top-links breadcrumb">
            <li>
                <a href="/admin">
                    <i class="fa fa-home"></i>
                </a>
            </li>
            <li>
                <a href="{{ path }}">
                    {{ "Search Battery" }}
                </a>
            </li>
            <li class="active">
                <span>{{ "Scan" }}</span>
            </li>
        </ol>
    </div>
{% endblock sonata_breadcrumb %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .container {
            max-width: 960px;
        }
        .videoElement
        {
            transform: rotateY(180deg);
            -webkit-transform:rotateY(180deg); /* Safari and Chrome */
            -moz-transform:rotateY(180deg); /* Firefox */
        }
        @media (max-width: 900px) {
            video#preview {
                width: 100% !important;
            }
        }
    </style>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://unpkg.com/@zxing/library@latest"></script>
{% endblock %}

{% block sonata_admin_content %}
    <div class="container">
        <div class="row mb-4">
            <div class="col-md-12">
                <div id="error-messages" class="alert alert-danger" style="display: none">
                </div>
                <div class="text-center">
                    <div class="scan-qr-div pt-7">
                        <video id="video" width="50%" style="border: 1px solid gray"></video>
                    </div>
                </div>
                <hr>
                <div class="mb-3 text-center">

                    <form class="card p-2" action="{{ path }}">
                        <div class="row">
                            <div class="col-md-10" style="padding-right: 0">
                                <input style="border-radius: 2px" type="text" name="search" id="search" class="form-control" placeholder="Go to detail page">
                            </div>
                            <div class="col-md-2" style="padding-left: 0">
                                <button type="submit" id="btn-search" class="btn btn-primary btn-block">{{ "Search" | trans }}</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        $('#btn-search').prop('disabled', true);
        window.addEventListener('load', function () {
            let selectedDeviceId;
            var hints = new Map();
            const enabledFormats = [
                // ...ALL_FORMATS_WHICH_YOU_WANT_TO_ENABLE
                ZXing.BarcodeFormat.UPC_A,
                ZXing.BarcodeFormat.AZTEC,
                ZXing.BarcodeFormat.CODE_128,
                ZXing.BarcodeFormat.DATA_MATRIX,
                ZXing.BarcodeFormat.MAXICODE,
                ZXing.BarcodeFormat.QR_CODE,
            ];
            hints.set(ZXing.DecodeHintType.ASSUME_GS1, true)
            hints.set(ZXing.DecodeHintType.TRY_HARDER, true)
            hints.set(ZXing.DecodeHintType.POSSIBLE_FORMATS, enabledFormats)
            const codeReader = new ZXing.BrowserMultiFormatReader(hints)
            console.log('ZXing code reader initialized')
            codeReader.getVideoInputDevices()
                .then((videoInputDevices) => {
                    if (videoInputDevices.length < 1) {
                        console.log('No video devices found');
                        return;
                    }
                    selectedDeviceId = videoInputDevices[0].deviceId;
                    $('.scan-qr-div').addClass('videoElement');
                    $.each(videoInputDevices, (i, c) => {
                        if (c.label.indexOf('back') != -1 || c.label.indexOf('Back') != -1) {
                            $('.scan-qr-div').removeClass('videoElement');
                            selectedDeviceId = c.deviceId;
                            return false;
                        }
                    });

                    codeReader.decodeFromVideoDevice(selectedDeviceId, 'video', (result, err) => {
                        if (result) {
                            $('#btn-search').prop('disabled', false);
                            console.log(result.getText())
                            $('#search').val(result.text);
                        }
                        if (err && !(err instanceof ZXing.NotFoundException)) {
                            console.error(err)
                            $('#error-messages').show();
                            $('#error-messages').html(err.toString());
                        }
                    })
                    console.log(`Started continous decode from camera with id ${selectedDeviceId}`)
                })
                .catch((err) => {
                    $('#error-messages').show();
                    $('#error-messages').html(err.toString());
                    console.error(err)
                })
        })
    </script>
{% endblock %}